/**
 * <적용법>
 * 1. npm install --save-dev eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin
 * 2. setting, .vscode.json 수정
 * 3. 일부 플러그인 설치 및 적용. 기본 구정 정보를 eslint 기준으로 작성
 */
{
  "plugins": [
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "@typescript-eslint/parser",
    "plugin:@typescript-eslint/recommended", // @typescript-eslint/eslint-plugin의 권장 규칙을 사용
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/errors",
    "plugin:import/warnings"
  ],
  "parser": "@typescript-eslint/parser",
  // parserOptions는 자바스크립트를 해석하는 파서의 설정에 관한 것입니다.
  "parserOptions": {
    "project": "tsconfig.json",
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  // env: 미리 정의된 전역 변수에 뭐가 있는지 명시
  "env": {
    "browser": false,
    "es6": true,
    "node": true
  },
  "ignorePatterns": [
    "node_modules/"
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".ts"
        ] // import/no-unresolved
      }
    }
  },
  // rules: 적용할 규칙들
  "rules": {
    "indent": [
      "error",
      4,
      {
        "VariableDeclarator": {
          "let": 2,
          "const": 3
        }
      }
    ],
    // import 정리
    "import/order": [
      "error",
      {
        "pathGroups": [
          {
            "pattern": "~/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@/**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "internal"
        ],
        "alphabetize": {
          "order": "asc" /* 오름차순으로 정렬 옵션 : [ 'ignore', 'asc', 'desc'] */
        },
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ]
      }
    ],
    "import/no-unresolved": "off",
    // Common ESLint & TSLint
    "camelcase": "off",
    "eqeqeq": "off",
    "quotes": [
      "error",
      "double"
    ], // "" 를 "" 로
    "semi": "error", // 세미콜론 해제(typescript로 이관)
    "valid-jsdoc": "off", // js comment 관련 주석 규칙을 파괴
    "curly": "error", // 단일 라인 중괄호 규칙 준수
    "no-var": "error", // var 사용 금지
    "no-undef": "error", // 선언되지 않은 변수 미허용
    "no-unreachable": "warn", // 도달할 수 없는 코드 라인에 경고
    "no-constant-condition": [
      "error",
      {
        "checkLoops": false
      }
    ], // 반복문을 제외하고 상수 표현식을 허용하지 않음
    "no-empty": "warn", // 빈 블록문 {} 에 경고
    "no-unused-vars": [
      "warn",
      {
        "args": "none"
      }
    ], // 미사용된 변수에 경고(함수의 인수 제외)
    "keyword-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ], // 키워드 전후 간격을 일정하게 유지
    "max-len": "off", // 라인 최대 길이 제거
    "key-spacing": [
      "error",
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "constructor-super": "error", // 파생클래스의 super() 활성화
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "linebreak-style": [
      "error",
      "unix"
    ], // 라인브레이커 스타일을 윈도우(개행 -> 자동 탭 -> 현재 width 위치)
    "no-async-promise-executor": "off", // async 사용 가능
    "arrow-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ], // 화살표 전후에 공백
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 2,
        "maxBOF": 0,
        "maxEOF": 0
      }
    ], // 개행의 최대 개수
    "brace-style": [
      "error",
      "stroustrup"
    ],
    "block-spacing": [
      "error",
      "never"
    ],
    "no-multi-spaces": [
      "error",
      {
        "ignoreEOLComments": true
      }
    ], // multisapce 미허용(주석은 허용)
    "no-trailing-spaces": [
      "error",
      {
        "ignoreComments": true
      }
    ], // 후행 공백(주석 제외)을 허용하지 않음.
    "no-irregular-whitespace": [
      "error",
      {
        "skipStrings": true,
        "skipTemplates": true,
        "skipComments": true,
        "skipRegExps": true
      }
    ],
    "no-case-declarations": "off", // switch case 구문에서 어휘절 허용
    "no-prototype-builtins": "off", // Object.prototypes 내장을 직접 사용 가능
    "no-useless-escape": "off",
    "no-import-assign": "error", // 가져온 바인딩에 할당 금지
    "id-blacklist": [
      "error",
      "any",
      "var",
      "let",
      "const",
      "null",
      "undefined"
    ],
    "prefer-const": "off",
    // TSLint 전용
    "@typescript-eslint/no-unnecessary-type-assertion": "off",
    "@typescript-eslint/await-thenable": "off",
    "@typescript-eslint/ban-types": "off", // 특정 별명 금지
    "@typescript-eslint/no-empty-function": "warn", // 빈 함수는 경고
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "args": "none"
      }
    ],
    "@typescript-eslint/interface-name": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-unsafe-member-access": "off", // ?
    "@typescript-eslint/restrict-plus-operands": "off", // ?
    "@typescript-eslint/require-await": "warn", // async 메서드는 반드시 await를 품어야 하며 어길 경우 warn
    "@typescript-eslint/no-empty-interface": "error", // 빈 인터페이스 금지
    "@typescript-eslint/no-unsafe-call": "off", // 리턴문에 함수 호출을 허용
    // "@typescript-eslint/jsdoc-format": [true, "check-multiline-start"],
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/prefer-regexp-exec": "off",
    "@typescript-eslint/space-before-function-paren": "warn",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        }
      }
    ], // 인터페이스 규격
    "@typescript-eslint/no-unsafe-return": "off", //
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-unsafe-assignment": "off", // any return 허용
    "@typescript-eslint/prefer-for-of": "off",
    "@typescript-eslint/no-misused-promises": "off"
  }
}